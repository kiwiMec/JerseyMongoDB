/**
 * RestServiceTemplate : A proof of concept ReST / MongoDB service for 
 * educational purposes only.
 *  Copyright (C) 2014  Michael Chester
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

Purpose
-------

This template is designed for quick start instruction when getting started 
using JAX-RS.  

Deployment steps:

1. Install MongoDB v2.6.4 and run
2. Install Tomcat v8.0.12 and run
3. Use Maven to build this project
4. Deploy the built war file to Tomcat

Test outline:

1. Browse to http://localhost:8080/resource to see id list.
2. Post {"name":"my name","mobile":"+NN (NN) NNN-NNNN"} to the URL in 5
3. Browse to http://localhost:8080/resource to see id list.
4. Get http://localhost:8080/resource/[returned id from 2]
5. Update URL from 7 with {"name":"new name","mobile":"+nn (nn) nnn-nnnn"}
6. Get http://localhost:8080/resource/[returned id from 2] to review changes.
7. Delete using URL from 7.
8. Browse to http://localhost:8080/resource to see id list.

New service changes:

1. Change the resource name in the 'context.xml' file.
2. Set up the resource fields in the Entity class.
3. Redeploy and test.


Id
--

This service uses a UUID field of the format:

[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}

As the unique index into the persisted document store.  This is created and
maintained by the service class itself.


Logging
-------

All logging is done via static class logger implementations to prevent logger
hijacking and other nasties.  More generally, unless there is a specific reason,
this is the best practice for setting up logging.

Errors are only for code exceptions.  Errors made in input are not errors in
code and at most should only be warnings if they have the potential to cause 
issues for the code.
